<html>
  <head>
  <title>
    Personalized Greeting From
  </title>
  </head>
  <body>
    <?php
if (!empty($_POST['name'])) {
    echo "Greeting, {$_POST['name']}, and welcome.";
}?>

<from action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
  Enter your name: <input type="text" name="name" />
  <input type="submit" />
</from>

  </body>
</html>


<?php

/*
## এই PHP কোডের  একটি সহজ উদাহরণ যা দেখায় কিভাবে PHP ব্যবহার করে ব্যবহারকারীর ইনপুট নেওয়া এবং তারপর সেই ইনপুটের উপর ভিত্তি করে ব্যক্তিগতকৃত একটি বার্তা দেখানো যায়। আসুন কোডটি ধাপে ধাপে বুঝে নেওয়া যাক:

### অংশ ১: ফর্মের ডেটা পরীক্ষা করা
```php
if (!empty($_POST['name'])) {
echo "Greeting, {$_POST['name']}, and welcome.";
}
```

 * **if (!empty($_POST['name']))** এই অংশটি একটি শর্ত পরীক্ষা করে। শর্তটি হল, `$_POST['name']` ভেরিয়েবলটি খালি কি না।
 * `$_POST` একটি সুপারগ্লোবাল অ্যারে, যা HTML ফর্ম থেকে পাঠানো ডেটা ধারণ করে।
 * `['name']` এই ইন্ডেক্সটি ব্যবহার করে আমরা ফর্মের `name` নামের ইনপুট ফিল্ড থেকে পাঠানো মানটি পাই।
 * `empty()` ফাংশনটি পরীক্ষা করে যে ভেরিয়েবলটি খালি কি না।
 * **echo "Greeting, {$_POST['name']}, and welcome.";** এই অংশটি শুধুমাত্র তখনই চালু হবে যখন `if` শর্তটি সত্য হবে। অর্থাৎ, যখন ব্যবহারকারী ফর্মে তার নাম লিখে সাবমিট করবে।
 * `echo` কমান্ডটি ব্যবহার করে আমরা পর্দায় টেক্সট প্রিন্ট করি।
 * `$_POST['name']` ভেরিয়েবলটির মানকে আমরা সরাসরি স্ট্রিং এর মধ্যে রেখে দিয়েছি, যাতে ব্যবহারকারীর নামটি সরাসরি বার্তার মধ্যে এসে যায়।

### অংশ ২: ফর্ম তৈরি করা
```html
<form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
Enter your name: <input type="text" name="name" />
<input type="submit" />
</form>
```
 * **<form>** ট্যাগটি একটি HTML ফর্ম তৈরি করে।
 * **action="<?php echo $_SERVER['PHP_SELF']; ?>"** এই অ্যাট্রিবিউটটি নির্দেশ করে যে, যখন ফর্ম সাবমিট করা হবে, তখন ডেটা কোন ফাইলে পাঠানো হবে। `$_SERVER['PHP_SELF']` ভেরিয়েবলটি বর্তমান ফাইলের পাথকে ধারণ করে। অর্থাৎ, ফর্ম সাবমিট হলে ডেটা আবার এই ফাইলেই পাঠানো হবে।
 * **method="post"** এই অ্যাট্রিবিউটটি নির্দেশ করে যে, ফর্মের ডেটা কোন পদ্ধতিতে পাঠানো হবে। `post` পদ্ধতি সাধারণত ফর্মের ডেটা পাঠানোর জন্য ব্যবহৃত হয়।
 * **<input type="text" name="name" />** এই ট্যাগটি একটি টেক্সট ইনপুট ফিল্ড তৈরি করে।
 * **name="name"** এই অ্যাট্রিবিউটটি ইনপুট ফিল্ডের নাম নির্ধারণ করে। এই নামটি ব্যবহার করে আমরা PHP কোডে ইনপুটের মান পাব।
 * **<input type="submit" />** এই ট্যাগটি একটি সাবমিট বাটন তৈরি করে। যখন ব্যবহারকারী এই বাটনে ক্লিক করবে, তখন ফর্ম সাবমিট হবে।
--------------------------------------------------------------------------------------------------------------------------
## $_SERVER['PHP_SELF'] কি?

 **$_SERVER['PHP_SELF']** একটি বিশেষ ধরনের ভেরিয়েবল, যাকে সুপারগ্লোবাল ভেরিয়েবল বলা হয়। এটি PHP স্ক্রিপ্টের মধ্যে স্বয়ংক্রিয়ভাবে তৈরি হয় এবং বর্তমানে চলমান PHP স্ক্রিপ্টের ফাইলের নামকে ধারণ করে। এই নামটি ডকুমেন্ট রুটের সাপেক্ষে দেওয়া হয়।

 **সহজ কথায়:**

 * **কোন ফাইল চলছে:** যখন কোন ওয়েব পেজে যাওয়া হয় এবং সেই পেজে PHP কোড থাকে, তখন সেই PHP কোডের ভিতরে `$_SERVER['PHP_SELF']` ভেরিয়েবলের মান হবে সেই PHP ফাইলের নাম।
 * **ডকুমেন্ট রুট:** ডকুমেন্ট রুট হল ওয়েব সার্ভারে সেই ফোল্ডার যেখান থেকে ওয়েব পেজগুলি সার্ভ করা হয়।
 * **সাপেক্ষে:** অর্থাৎ, ফাইলের নামটি ডকুমেন্ট রুট থেকে শুরু করে দেওয়া হয়।

 **উদাহরণ:**

ধরুন, আপনার ওয়েবসাইটের ডকুমেন্ট রুট হল `http://yourwebsite.com/public/`. এবং আপনার একটি PHP ফাইল আছে যার নাম `about.php` এবং এটি `public` ফোল্ডারের ভিতরে রয়েছে। যখন আপনি `http://yourwebsite.com/public/about.php` এই ঠিকানায় যাবেন, তখন `about.php` ফাইলের ভিতরে যদি আপনি `echo $_SERVER['PHP_SELF'];` লিখেন, তাহলে এটি `/about.php` প্রিন্ট করবে।

 **কেন এটি ব্যবহার করা হয়:**

 * **ফর্মের একশন:** যখন কোন ফর্ম সাবমিট করা হয়, তখন ফর্মের ডেটা কোন ফাইলে পাঠানো হবে, তা নির্ধারণ করতে `$_SERVER['PHP_SELF']` ব্যবহার করা হয়। এতে করে ফর্মের ডেটা আবার সেই ফাইলেই পাঠানো হয় যেখান থেকে ফর্মটি কল করা হয়েছিল।
 * **ইনক্লুড ফাইলের পাথ:** অন্য কোন ফাইলকে ইনক্লুড করার সময়, `$_SERVER['PHP_SELF']` ব্যবহার করে সাপেক্ষে পাথ দেওয়া যায়।
 * **ডিবাগিং:** কোন PHP স্ক্রিপ্ট কোন ফাইল থেকে চলছে, তা জানার জন্য `$_SERVER['PHP_SELF']` ব্যবহার করা হয়।

 **সতর্কতা:**

 * `$_SERVER['PHP_SELF']` এর মানকে সরাসরি HTML এ ইনপুট ফিল্ডে বা লিঙ্কে ব্যবহার করা নিরাপদ নয়। কারণ এতে XSS (Cross-Site Scripting) এর মতো সিকিউরিটি সমস্যা হতে পারে।
 * `$_SERVER['PHP_SELF']` এর মানকে সর্বদা ভালো করে স্যানিটাইজ করে ব্যবহার করতে হবে।

 **সারসংক্ষেপ:**

`$_SERVER['PHP_SELF']` একটি খুবই উপযোগী ভেরিয়েবল যা PHP স্ক্রিপ্টের মধ্যে বিভিন্ন কাজে ব্যবহৃত হয়। এটি বর্তমানে চলমান PHP স্ক্রিপ্টের ফাইলের নামকে ধারণ করে। এই ভেরিয়েবলটি ব্যবহার করে আপনি আপনার PHP অ্যাপ্লিকেশনকে আরো ডাইনামিক এবং ফ্লেক্সিবল করে তুলতে পারবেন।

 */

echo $_SERVER['PHP_SELF'];

?>
